% Sources/Inspiration:
% https://tex.stackexchange.com/a/99176 (\ifvalidimage{})
% https://tex.stackexchange.com/a/194961/13600 (\coloremoji)
% https://tex.stackexchange.com/a/295217/136226 (\coloremoji_composite)
\RequirePackage{xparse}	% includes expl3
\ProvidesPackage{coloremoji}

\RequirePackage{graphicx}
\RequirePackage{stringenc}
\RequirePackage[utf8]{inputenc}
\RequirePackage[export]{adjustbox}
\RequirePackage{amsmath}
\RequirePackage{newunicodechar}

% macro to check if (emoji-)image exists and is valid:
\newif\ifgraphicexist
\newcommand\ifvalidimage[1]{%
	\begingroup
		\global\graphicexisttrue
		\let\input@path\Ginput@path
		\filename@parse{#1}%
		\ifx\filename@ext\relax
			\@for\Gin@temp:=\Gin@extensions\do{%
				\ifx\Gin@ext\relax
					\Gin@getbase\Gin@temp
				\fi
			}%
		\else
			\Gin@getbase{\Gin@sepdefault\filename@ext}%
			\ifx\Gin@ext\relax
				\global\graphicexistfalse
				\def\Gin@base{\filename@area\filename@base}%
				\edef\Gin@ext{\Gin@sepdefault\filename@ext}%
			\fi
		\fi
		\ifx\Gin@ext\relax
			\global\graphicexistfalse
		\else
			\@ifundefined{Gin@rule@\Gin@ext}%
			{\global\graphicexistfalse}%
			{}%
		\fi
		\ifx\Gin@ext\relax
			\gdef\imageextension{unknown}%
		\else
			\xdef\imageextension{\Gin@ext}%
		\fi
	\endgroup
	\ifgraphicexist
		\expandafter \@firstoftwo
	\else
		\expandafter \@secondoftwo
	\fi
}
\ExplSyntaxOn
\tl_const:Nn \c_coloremoji_dir_tl { emoji_images }

% Command to print an emoji:
% Check, if image exists and is valid. If so, insert the image(emoji). If not insert a placeholder.
\newcommand{\printemoji}[1]{
	\ifvalidimage{\c_coloremoji_dir_tl / \tl_trim_spaces:n{#1} .pdf}{
		\text{\includegraphics[width=1em,valign=t,raise=-0.1em]{\c_coloremoji_dir_tl / \tl_trim_spaces:n{#1}.pdf}}
		%\text{\includegraphics[width=1em,raise=-0.21em]{\c_coloremoji_dir_tl / \tl_trim_spaces:n{#1}.pdf}}
	}{
		\ClassWarning{coloremoji}{Emoji~image~not~found:~'\c_coloremoji_dir_tl / \tl_trim_spaces:n{#1}'.~Inserting~placeholder.}
		\textbullet
	}
}

% expl3-macro(s) to process (single) emojis:
% ------------------------------------------

% Unicode (Xe-, LuaLaTeX): Just insert emoji with converted hex.
\cs_new_protected:Npn \coloremoji_unicode:n #1 {
	\printemoji{\int_to_Hex:n{`#1}}
}

% Other (PDFLaTeX): Process character to hex and insert corresponding emoji.
\cs_new_protected:Npn \coloremoji_eightbit:n #1 {
  \StringEncodingConvert \l_coloremoji_input_tl { \tl_to_str:n { #1 } } { utf8 } { utf32 }
  \tl_set:Nx \l_coloremoji_input_tl { \pdfescapehex\expandafter{\l_coloremoji_input_tl} }
  \regex_replace_once:nnN { \A 0* } { } \l_coloremoji_input_tl
	\printemoji{\l_coloremoji_input_tl}
}

% expl3-macro(s) to process composite-emojis:
% --------------------------------------

% Unicode (Xe-, LuaLaTeX): If the two characters form a new emoji, insert this emoji. Else insert the first emoji and let the rest be processed.
\cs_new_protected:Nn \coloremoji_composite_unicode:nn {
	\ifvalidimage{\c_coloremoji_dir_tl / \int_to_Hex:n{`#1}-\int_to_Hex:n{`#2}.pdf}{
		\printemoji{\int_to_Hex:n{`#1}-\int_to_Hex:n{`#2}}
	}{
		%\ClassWarning{coloremoji}{Composite~emoji~not~found:~'\int_to_Hex:n{`#1}-\int_to_Hex:n{`#2}'.}
		\printemoji{\int_to_Hex:n{`#1}}
		#2
	}
}

% Other (PDFLaTeX): Process characters to hex form. If the two characters form a new emoji, insert this emoji. Else insert the first emoji and let the rest be processed.
\cs_new_protected:Nn \coloremoji_composite_eightbit:nnnnn {
	\StringEncodingConvert \l_coloremoji_inputA_tl { \tl_to_str:n { #1 } } { utf8 } { utf32 }
	\tl_set:Nx \l_coloremoji_inputA_tl { \pdfescapehex\expandafter{\l_coloremoji_inputA_tl} }
	\regex_replace_once:nnN { \A 0* } { } \l_coloremoji_inputA_tl
	\StringEncodingConvert \l_coloremoji_inputB_tl { \tl_to_str:n { #2#3#4#5 } } { utf8 } { utf32 }
	\tl_set:Nx \l_coloremoji_inputB_tl { \pdfescapehex\expandafter{\l_coloremoji_inputB_tl} }
	\regex_replace_once:nnN { \A 0* } { } \l_coloremoji_inputB_tl

	\ifvalidimage{\c_coloremoji_dir_tl / \l_coloremoji_inputA_tl-\l_coloremoji_inputB_tl.pdf}{
		\printemoji{\l_coloremoji_inputA_tl-\l_coloremoji_inputB_tl}
	}{
		%\ClassWarning{coloremoji}{Composite~emoji~not~found:~' \l_coloremoji_inputA_tl - \l_coloremoji_inputB_tl '.}
		\printemoji{\l_coloremoji_inputA_tl}
		#2#3#4#5
	}
}

% Macros depending on TeX flavor:
\bool_if:nTF { \sys_if_engine_xetex_p: || \sys_if_engine_luatex_p: }{
	% Single emoji:
	\cs_set_eq:NN \coloremoji \coloremoji_unicode:n
	% Composite emoji:
	\cs_new:Nn \coloremoji_composite:n {
		% If following character is a space, print single emoji.
		\peek_charcode:NTF \c_space_token {
			\printemoji{\int_to_Hex:n{`#1}}
		}{
			% If following character is an other token (commands, ...), print single emoji. Else insert the composite emoji.
			\peek_charcode:NTF \c_other_token {
				\printemoji{\int_to_Hex:n{`#1}}
			}{
				\coloremoji_composite_unicode:nn { #1 }
			}
		}
	}
}{
	% If following character is a space: print single emoji.
	\cs_set_eq:NN \coloremoji \coloremoji_eightbit:n
	% If following character matches charcode, print single emoji. Else insert the composite emoji.
	\cs_new:Nn \coloremoji_composite:n {
		\peek_charcode:NTF ^^f0 {
		  \coloremoji_composite_eightbit:nnnnn { #1 }
		}{
			{ \coloremoji{#1} }
		}
	}
}

\input{coloremoji_shortnames.sty}
\newcommand{\emoji}[1]{
	\coloremoji_shortnames{#1}
}

% \NewDocumentCommand{

% emoji-character (command-)list:
\input{coloremoji_characters.sty}
